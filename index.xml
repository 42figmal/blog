<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>42Figmal on ARCHIVE</title><link>https://42figmal.github.io/blog/</link><description>Recent content in 42Figmal on ARCHIVE</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://42figmal.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Information</title><link>https://42figmal.github.io/blog/docs/ProductDesign/TheTribunus/Information/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://42figmal.github.io/blog/docs/ProductDesign/TheTribunus/Information/</guid><description>asd</description></item><item><title>PrefixSum_누적합</title><link>https://42figmal.github.io/blog/docs/CS/Algorithm/Information/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://42figmal.github.io/blog/docs/CS/Algorithm/Information/</guid><description>asd</description></item><item><title>[1주차] 서비스 기획자 커리어</title><link>https://42figmal.github.io/blog/docs/ProductDesign/Sesac/Information/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://42figmal.github.io/blog/docs/ProductDesign/Sesac/Information/</guid><description>[1주차] 서비스 기획자 커리어 마인드 셋 # 서비스 기획 # 업무 단계, 실무에서의 사이클 # 현업자 분들에게 가장 궁금한 것은 역시나 실무가 어떤 사이클로 돌아가는지가 아닐까?
실무 사이클 ### 1. 문제의 발견 - 직접 서비스를 이용해보면서 불편사항 찾기 - 구글, 네이버 등 타사에도 비슷한 기능이 있는지 마켓리서치 - 베치마킹 시 유명 서비스에서의 특정 페이지 또는 기능으로 범위를 한정 - 주니어 시절 아직 해당 서비스에 익숙하지 않을 때의 신선한 시선을 기억 2.</description></item><item><title>Information</title><link>https://42figmal.github.io/blog/docs/ProductDesign/SwimNearMe/Information/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://42figmal.github.io/blog/docs/ProductDesign/SwimNearMe/Information/</guid><description> 헤드라인 HeadLine # 헤드라인 2 # 헤드라인 3 # 헤드라인 4 # 안녕하세요 안녕하세요 hello hello
#include&amp;lt;stdio.h&amp;gt;</description></item><item><title>생성자</title><link>https://42figmal.github.io/blog/docs/CS/Swift/init/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://42figmal.github.io/blog/docs/CS/Swift/init/</guid><description>Init # 클래스 안의 함수를 매서드라고 부른다. 매서드 중 클래스내 변수를 초기화하는 함수를 생성자 라고 부른다.
클래스가 품고있는 속성들이 많아질 경우 사용시 일일히 초기화하기 어렵기 때문에 우리는 초기화를 도와주는 생성자를 사용한다!
단, 속성을 옵셔널로 선언하면 값이 없을경우 nil로 표현이 가능하므로 init을 사용할 필요가 없다.
class Cake { var name: String var price: Double init (a:String, b:Double) { name = a price = b } } // 생성자 미사용 시 var blueCake = Cake() blueCake.</description></item><item><title>여러가지 속성</title><link>https://42figmal.github.io/blog/docs/CS/Swift/property/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://42figmal.github.io/blog/docs/CS/Swift/property/</guid><description>Property # 저장속성 # 메모리 공간을 가지고 값을 저장할 수 있는 속성이다.
Class Cake의 저장속성은 var name, var price !
class Cake { var name: String lazy var price: Double = 0.1 init (a:String) { name = a } } 지연저장속성(Lazy Stored Properties) # 속성의 초기화를 지연시키는 것으로, 해당 속성은 제외한 상태로 진행하다가 후에 접근 시 초기화하는 것이다.
나중에 변화가 생기는 것이므로 var 로 선언해야며 미리 초기화 해두어야하는 것이 포인트!</description></item></channel></rss>